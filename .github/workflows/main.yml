name: pedidos-fast-food-pipeline

on:
  push:
      branches:
        - main
  pull_request:
      branches:
        - main
      paths-ignore:
        - '**.md'

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        run: npm run test

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - run: npm ci

  deploy-production:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: Prod
    needs: build

    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy Prod"

  deploy-aws:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: Prod
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy-AWS
        id: build-image
        env:
          aws-region: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend-fast-food
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
